name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into EC2
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private_key.pem
          chmod 600 /tmp/private_key.pem
          ssh -o StrictHostKeyChecking=no -i /tmp/private_key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}
          echo "Doing pwd below"
          pwd
          echo "Doing ls below"
          ls
          echo "Changing to openui directory"
          cd /openui
          echo "Doing git pull"
          git pull origin main
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        continue-on-error: false 
      
      # - name: SSH into EC2
      #   run: ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}
      #   continue-on-error: false

      # - name: Execute Git Pull
      #   run: cd /openui && git pull origin main
      #   continue-on-error: false

      - name: Build and Deploy Application
        if: always()  # Ensure this step runs regardless of previous steps
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use the latest Node.js version
        continue-on-error: false

      - name: Install pnpm
        if: always()  # Ensure this step runs regardless of previous steps
        run: npm install -g pnpm
        continue-on-error: false

      - name: Install Dependencies
        if: always()  # Ensure this step runs regardless of previous steps
        run: |
          cd /path/to/your/application/frontend
          pnpm install
        continue-on-error: false

      - name: Build Frontend
        if: always()  # Ensure this step runs regardless of previous steps
        run: |
          cd /path/to/your/application/frontend
          npm run build
        continue-on-error: false

      - name: Install Backend Dependencies
        if: always()  # Ensure this step runs regardless of previous steps
        run: |
          cd /path/to/your/application/backend
          pip install .
        continue-on-error: false

      - name: Set OpenAI API Key
        if: always()  # Ensure this step runs regardless of previous steps
        run: |
          export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        continue-on-error: false

      - name: Run Backend
        if: always()  # Ensure this step runs regardless of previous steps
        run: |
          cd /path/to/your/application/backend
          python -m openui
        continue-on-error: false
